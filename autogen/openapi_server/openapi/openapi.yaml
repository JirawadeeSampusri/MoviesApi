openapi: 3.0.0
info:
  description: This API provides the details of the movie.
  title: Movie api
  version: 3.0.0
servers:
- url: /movie/v3
paths:
  /movies:
    get:
      operationId: controller_get_movies
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Movie'
                type: array
          description: Success
      summary: Returns a list movie.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/BestDirector:
    get:
      operationId: controller_get_best_director
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Success
      summary: Returns a list movie.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/EachDirectorScore:
    get:
      operationId: controller_get_average_score_for_each_director
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Director'
                type: array
          description: Success
      summary: Returns a list movie.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/EachYearScore:
    get:
      operationId: controller_get_average_score_of_movies_in_each_year
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AverageEachYear'
                type: array
          description: Success
      summary: Returns a list movie.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/MostYearScore:
    get:
      operationId: controller_find_most_score_of_year
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Success
      summary: Returns a list movie.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/best-movies:
    get:
      operationId: controller_get_best_movies
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Movie'
                type: array
          description: Success
      summary: Returns a list movie that ahve imdb scor more than 9.5.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/{actor_name}:
    get:
      operationId: controller_get_movies_from_actor
      parameters:
      - explode: false
        in: path
        name: actor_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: Success
          links:
            all-score:
              operationId: controller.get_average_score_of_actor
              parameters:
                actor_1_name: $response.body#/actor_name
      summary: Returns a list of movies that this director has directed.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/{actor_name}/all-score:
    get:
      operationId: controller_get_average_score_of_actor
      parameters:
      - explode: false
        in: path
        name: actor_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Actor'
                type: array
          description: Success
      summary: Returns average score of all movie of this director.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/{director_name}:
    get:
      operationId: controller_get_movies_directed_by_director_name
      parameters:
      - explode: false
        in: path
        name: director_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: Success
          links:
            score:
              operationId: controller.get_average_score_for_director
              parameters:
                director_name: $response.body#/director_name
      summary: Returns a list of movies that this director has directed.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/{director_name}/score:
    get:
      operationId: controller_get_average_score_for_director
      parameters:
      - explode: false
        in: path
        name: director_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: number
          description: Success
      summary: Returns average score of all movie of this director.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/{movie_title}:
    get:
      operationId: controller_get_movie_detail_by_movie_title
      parameters:
      - explode: false
        in: path
        name: movie_title
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: Success
      summary: Returns full detail of the movies that have this title.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/{title_year}:
    get:
      operationId: controller_get_movie_by_year
      parameters:
      - explode: false
        in: path
        name: title_year
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: Success
          links:
            year-Score:
              operationId: controller.get_average_score_of_movies_in_that_year
              parameters:
                title_year: $response.body#/title_year
            EachDirectorScore:
              operationId: controller.get_average_score_for_each_director_in_each_year
              parameters:
                title_year: $response.body#/Director
      summary: Returns full detail of the movies that have this title.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/{title_year}/EachDirectorScore/:
    get:
      operationId: controller_get_average_score_for_each_director_in_each_year
      parameters:
      - explode: false
        in: path
        name: title_year
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Director'
                type: array
          description: Success
      summary: Returns a list movie.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /movies/{title_year}/year-score:
    get:
      operationId: controller_get_average_score_of_movies_in_that_year
      parameters:
      - explode: false
        in: path
        name: title_year
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: number
          description: Success
      summary: Returns full detail of the movies that have this title.
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  schemas:
    Movie:
      example:
        country: country
        num_voted_user: 1
        actor_2_name: actor_2_name
        language: language
        num_user_for_reviews: 6
        title_year: 5
        movie_title: movie_title
        imdb_score: 0.8008282
        duration: duration
        movie_imdb_link: movie_imdb_link
        actor_1_name: actor_1_name
        genres: genres
        director_name: director_name
        actor_3_name: actor_3_name
      properties:
        actor_1_name:
          type: string
        actor_2_name:
          type: string
        actor_3_name:
          type: string
        country:
          type: string
        director_name:
          type: string
        duration:
          type: string
        genres:
          type: string
        imdb_score:
          format: float
          type: number
        language:
          type: string
        movie_imdb_link:
          type: string
        movie_title:
          type: string
        num_user_for_reviews:
          type: integer
        num_voted_user:
          type: integer
        title_year:
          type: integer
      type: object
    AverageEachYear:
      example:
        imdb_avg_score: 6.0274563
        title_year: 0
      properties:
        title_year:
          type: integer
        imdb_avg_score:
          format: float
          type: number
      type: object
    Director:
      example:
        imdb_avg_score: 0.8008282
        director_name: director_name
      properties:
        director_name:
          type: string
        imdb_avg_score:
          format: float
          type: number
      type: object
    Actor:
      example:
        imdb_avg_score: 0.8008282
        actor_name: actor_name
      properties:
        actor_name:
          type: string
        imdb_avg_score:
          format: float
          type: number
      type: object
