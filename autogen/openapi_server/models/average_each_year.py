# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class AverageEachYear(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, year=None, score=None):  # noqa: E501
        """AverageEachYear - a model defined in OpenAPI

        :param year: The year of this AverageEachYear.  # noqa: E501
        :type year: Integer
        :param score: The score of this AverageEachYear.  # noqa: E501
        :type score: float
        """
        self.openapi_types = {
            'year': Integer,
            'score': float
        }

        self.attribute_map = {
            'year': 'year',
            'score': 'score'
        }

        self._year = year
        self._score = score

    @classmethod
    def from_dict(cls, dikt) -> 'AverageEachYear':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AverageEachYear of this AverageEachYear.  # noqa: E501
        :rtype: AverageEachYear
        """
        return util.deserialize_model(dikt, cls)

    @property
    def year(self):
        """Gets the year of this AverageEachYear.


        :return: The year of this AverageEachYear.
        :rtype: Integer
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this AverageEachYear.


        :param year: The year of this AverageEachYear.
        :type year: Integer
        """

        self._year = year

    @property
    def score(self):
        """Gets the score of this AverageEachYear.


        :return: The score of this AverageEachYear.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this AverageEachYear.


        :param score: The score of this AverageEachYear.
        :type score: float
        """

        self._score = score
